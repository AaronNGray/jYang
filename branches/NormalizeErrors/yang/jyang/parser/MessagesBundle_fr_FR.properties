cd = CIRCULAR DEPENDENCY {0}
nd = NOT DEFINED {0}
ad = ALREADY DEFINED {0}
cp = CHANGE PREFIX {0}
ipnf IMPORTED PREFIX NOT FOUND {0}
ad2 = {0} ALREADY DEFINED IN {1}
ctf = CONFIG TRUE ANd PARENT CONFIG FALSE

##### messages

circ_dep = circular dependency for type "{0}"
rec_ifs = circular feature references for "{0}" from {1}:{2}
circ_identity = circular identity reference for "{0}"
not_mod = not a module
dup_child = duplicate child name : {0} is already defined at {1}:{2}
dup_child_used = duplicate used child name : {0} in grouping {3} is already defined at {1}:{2}
not_alw = {0} is not allowed for the base type {1}
default_match_fail = default value "{0}" does not match its base type at {1} - {2} for the inherited default value for {3} defined at {4} 
direct_default_match_fail = default value "{0}" does not match its base type - {1} for the default value for {2} defined at {3} 
illegal_builtin = illegal uses of built-in type {0}

bad_subtyping = subtyping error {0}

expected = {0} expected

empty_input = a rpc input must have at least one data definition
empty_output = a rpc output must have at least one data definition

dup_name = {0} {1} is already defined at {2}:{3}

bad_value = bad {0} value {1} - {2}

value_not_in_range value {0} is not in the range of the type {1}

empty_union = the type empty (defined at {0}:{1}) cannot be part of union

bad_default_union = bad expression "{0}" for the union type  defined at {1}:{2} 

rec_grouping = recursive grouping uses from "{0}"

feature_not_found = feature "{0}" not found

base_not_found = base identity "{0}" not found

file_not_found = file "{0}".yang not found

##############@ modules submodule

not_module = the name {0} is not a module name
not_submodule = the name {0} is not a sub-module
not_belong = the sub-module {0} does not belongs to module {1}

### config parent : {0} the node type, {1} its name

config_parent = node {0} {1} is config "true" and its parent is config "false"

#### default case not found {0} : the choice name, {1} : the default case

default_case_not_found = default case {1} of the choice {0} is not defined

###################### Mandatory node in default case

mand_def_case = mandatory node "{0}" in the default case of the choice "{1}" at {2}:{3}

#####@ key config not the same as the list {0} : the key, {1} the list 

key_config = config value of the key "{0}" is not the same as the list {1} at {2}:{3}
key_not_found =   key {0} of list {1} not found
key_exp = key expected for the list : {0}
key_empty = empty type for the key {0} of the list {1}


######## Unique messages

unique_not_found = unique node {0} not found in the list {1}

################## Range

bad_range_order = bad order in range : {0}



##### unknown messages

unknown_type = type {0} is not defined in the current context

##### unknown element {0} is the type (grouping, typedef,...) {1} is the name

unknown = {0} {1} is not defined in the current context

#### dupplicate value

dupp_enum_val = the enum value "{0}" has already been used for the enumeration at {1}
dupp_enum_name = the enum name "{0}" has already been used for the enumeration at {1}

dup_value = the {0} {1} has already been used for the {2} at {3}

##### Unexpected keyword

unex_kw = unexpected keyword "{0}"

####### bad expression

bad_expr bad expression : {0}

bad_aug_expr = bad augment expression {0}

bad_binary_expr bad binary expression : {0}

bad_choice_aug = case augment error; {0} at {1}:{2} is not a choice

config_expr bad config expression : {0}
enum_expr bad enum expression : {0}
enum_auto_too_big automatic enum value too big for {0}

################### Mandatory and default

def_mand mandatory is "true" and default exists at {0}:{1}

################## Augment messages

not_augmentable the node {0} at {1}:{2} can not be augmented
augmented_not_found  augmented node {0} not found

###### Already defined messages

argument = argument already defined
belong = belong already defined
config = config already defined
contact = contact already defined
default = default already defined
description = description already defined
deviatenotsupported = deviatenotsupported already defined
errapp = errapp already defined
errmess = errmess already defined
extension = extension {0} already defined
grouping = grouping {0} already defined
input = input already defined
key = key already defined
length = length already defined
mandatory = mandatory already defined
max = max already defined
min = min already defined
namespace = namespace already defined
ordered = ordered already defined
organization = organization already defined
output = output already defined
position = position already defined
prefix = prefix already defined
presence = unexpected keywordpresence already defined
reference = reference already defined
revision = revision already defined
status = status already defined
type = type already defined
typedef = type name "{0}" is already defined at {1}:{2}
units = units already defined
value = value already defined
version = version already defined
when = when already defined



#### expression errors messages

pattern_exp = the pattern {0} is not a regular one
length_exp = BAD_LENGTH_EXP
range_exp = BAD_RANGE_EXP
config_exp = BAD_CONFIG_VALUE
ordered_exp = BAD_ORDERED_EXP
status_exp = BAD_STATUS_EXP
yin_exp = BAD_YIN_ELEMENT_EXP
unique_exp = BAD_UNIQUE_EXP
uses_augment_exp = BAD_USES_AUGMENT_EXP

### expected messages

expected_kw = keyword {0} expected
 
