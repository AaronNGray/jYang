{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 src/applet : interface graphique\
\
YangApplet : le main\
\
src/yangTree : data tree\
\
yangTree.nodes : les noeuds du data tree g\'e9n\'e9rique\
yangTree.attributes : des attributs permettant de faire des v\'e9rifications sur les valeurs / spec\
yangTree.attributes.builtinTypes : types de base utilis\'e9s pour les v\'e9rifications.\
yangTree.attributes.restrictions : restrictions appliqu\'e9s aux types de base\
\
yangTree. YangTreeModel : JTree interface\
TreeFiller : construit le data tree \'e0 partir de l'xml +  YangTree\
 Choice Exception : quand on veut lancer les edits mais qu'il reste des choices non choisis (les cases)\
NetconfReply : si l'XML est pourri\
\
\
YangSchemaTreeGenerator : appel\'e9 par YencaP Manager ; cr\'e9e le fichier de l'agent contenant le YangNode donn\'e9 indirectement en param\'e8tre de l'applet.\
(algo recursif de parcours du schema tree vers un data tree g\'e9n\'e9rique.\
}