cd = CIRCULAR DEPENDENCY {0}
nd = NOT DEFINED {0}
ad = ALREADY DEFINED {0}
cp = CHANGE PREFIX {0}
ipnf IMPORTED PREFIX NOT FOUND {0}
ad2 = {0} ALREADY DEFINED IN {1}
ctf = CONFIG TRUE ANd PARENT CONFIG FALSE

##### messages

circ_dep = circular dependency for type "{0}"
not_mod = not a module
dup_child = duplicate child name : {0} is already defined at {1}:{2}
not_alw = {0} is not allowed for the base type {1}
default_match_fail = default value "{0}" does not match its base type at {1} - {2} for the inherited default value for {3} defined at {4} 
direct_default_match_fail = default value "{0}" does not match its base type - {1} for the default value for {2} defined at {3} 

bad_value = bad {0} value {1} - {2}

empty_union = the type empty (defined at {0}:{1}) cannot be part of union

rec_grouping = recursive grouping uses from "{0}"

### config parent : {0} the node type, {1} its name

config_parent = node {0} {1} is config "true" and its parent is config "false"

#### default case not found {0} : the choice name, {1} : the default case

default_case_not_found = default case {1} of the choice {0} is not defined

#####@ key config not the same as the list {0} : the key, {1} the list 

key_config = config of the key {0} is not the same as the list {1}
key_not_found =   key {0} of list {1} not found
key_exp = key expected for the list : {0}
key_empty = empty type for the key {0} of the list {1}


######## Unique messages

unique_not_found = unique node {0} not found in the list {1}


##### unknown messages

unknown_type = type {0} is not defined in the current context

#### dupplicate value

dupp_enum_val = the enum value "{0}" has already been used for the enumeration at {1}
dupp_enum_name = the enum name "{0}" has already been used for the enumeration at {1}

dup_value = the {0} {1} has already been used for the {2} at {3}

##### Unexpected keyword

unex_kw = unexpected keyword "{0}"

####### bad expression

config_expr bad config expression : {0}
enum_expr bad enum expression : {0}

###### Already defined messages

argument = argument already defined
belong = belong already defined
config = config already defined
contact = contact already defined
default = default already defined
description = description already defined
deviatenotsupported = deviatenotsupported already defined
errapp = errapp already defined
errmess = errmess already defined
extension = extension {0} already defined
grouping = grouping {0} already defined
input = input already defined
key = key already defined
length = length already defined
mandatory = mandatory already defined
max = max already defined
min = min already defined
namespace = namespace already defined
ordered = ordered already defined
organization = organization already defined
output = output already defined
position = position already defined
prefix = prefix already defined
presence = unexpected keywordpresence already defined
reference = reference already defined
revision = revision already defined
status = status already defined
type = type already defined
typedef = type name "{0}" is already defined at {1}:{2}
units = units already defined
value = value already defined
version = version already defined
when = when already defined



#### expression errors messages

pattern_exp = the pattern {0} is not a regular one
length_exp = BAD_LENGTH_EXP
range_exp = BAD_RANGE_EXP
config_exp = BAD_CONFIG_VALUE
ordered_exp = BAD_ORDERED_EXP
status_exp = BAD_STATUS_EXP
yin_exp = BAD_YIN_ELEMENT_EXP
unique_exp = BAD_UNIQUE_EXP
uses_augment_exp = BAD_USES_AUGMENT_EXP

### expected messages

type_expec = TYPE_EXPECTED
 
