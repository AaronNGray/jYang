import java.util.regex.Matcher;
import java.util.regex.Pattern;

/* Generated By:JJTree: Do not edit this line. YANG_Path.java */

public class YANG_Path extends SimpleNode implements YANG_KeyRefSpecification {

	private String path = null;

	private Pattern path_arg = null;

	public YANG_Path(int id) {
		super(id);
		try {
			path_arg = Pattern
					.compile("((/([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*([s*([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*s*=s*([$]this/(../)+(([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*/)*([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*)s*])*)+|(../)*([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*([s*([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*s*=s*([$]this/(../)+(([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*/)*([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*)s*])?(/([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*([s*([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*s*=s*([$]this/(../)+(([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*/)*([_A-Za-z][._\\-A-Za-z0-9]*:)?[_A-Za-z][._\\-A-Za-z0-9]*)s*])*)+)");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public YANG_Path(yang p, int id) {
		super(p, id);
	}

	public void setPath(String p) throws YangParserException {
		String pa = YangBuiltInTypes.removeQuotesAndTrim(p);
		Matcher m = path_arg.matcher(pa);
		if (m.matches())
			path = pa;
		else
			throw new YangParserException("@" + getLine() + "." + getCol()
					+ ":incorrect path-arg expression " + p);
	}

	public String getPath() {
		return path;
	}

	public String toString() {
		return "path " + path + ";";
	}

}
